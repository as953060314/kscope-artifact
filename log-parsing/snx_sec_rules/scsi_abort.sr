#/
# What is reported
# ~~~~~~~~~~~~~~~~
# Reports instances of SCSI aborts. Up to one email is sent every
# minute, so errors can accumulate.
#
# Origin
# ~~~~~~
# From **syslog**
#
# Instances of logged strings
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ::
#
#  2014-03-03T20:22:29-06:00 snx11003n274 kernel: [1840575.530137] sd 0:0:43:0: attempting task abort! scmd(ffff8807ec586780)
#  2014-03-03T20:22:29-06:00 snx11003n274 kernel: [1840575.544720] scsi target0:0:43: handle(0x0039), sas_address(0x5000cca01b4722a2), phy(27)
#  2014-03-03T20:22:29-06:00 snx11003n274 kernel: [1840575.553082] scsi target0:0:43: enclosure_logical_id(0x50050cc10c4003c4), slot(73)
#  2014-03-03T20:22:39-06:00 snx11003n274 kernel: [1840585.598292] sd 0:0:43:0: attempting task abort! scmd(ffff8807ec586780)
#  2014-03-03T20:22:39-06:00 snx11003n274 kernel: [1840585.612296] scsi target0:0:43: handle(0x0039), sas_address(0x5000cca01b4722a2), phy(27)
#  2014-03-03T20:22:39-06:00 snx11003n274 kernel: [1840585.620616] scsi target0:0:43: enclosure_logical_id(0x50050cc10c4003c4), slot(73)
#/

# Wait for 60 seconds before reporting the errors, so they can accumulate.
type= Single
continue=takenext
context = [SYSLOG_LOG && !SCSI_ABORT]
ptype= RegExp
pattern= (\d\d:\d\d:\d\d).*snx(\d.*)(n\d.*) kernel:.+ attempting task abort!
desc= scsi abort
#action= create SCSI_ABORT 60 (lcall %o -> ( sub { return $SCSI_ABORT_count; } ) ; if %o (report _THIS %cmd "%{subject}: %o attempted scsi task abort(s)" %list,%list_page)) ;\
action= create SCSI_ABORT 60 (lcall %o -> ( sub { return $SCSI_ABORT_count; } ) ; if %o (report _THIS %cmd "%{subject}: %o attempted scsi task abort(s)" %list)) ;\
        lcall %o -> ( sub { $SCSI_ABORT_count = 0; } ) ;\
        add SCSI_ABORT System:      %site %host, %mf ;\
        add SCSI_ABORT Filesystem:  all ;\
        add SCSI_ABORT Event:       SCSI task abort(s). ;\
        add SCSI_ABORT Time:      $1 %Tmsg ;\
        add SCSI_ABORT %t  --  %tmsg2 ;\
        add SCSI_ABORT %{rule_info}scsi_abort.sr ;\
        if %urlsr ( add SCSI_ABORT %{urlsr}/scsi_abort.sr.html ) ;\
        add SCSI_ABORT From log file: $+{_inputsrc}%{N} ;\
        add SCSI_ABORT %{N}

# Add a new abort to the list
type= Single
ptype= RegExp
context = [SYSLOG_LOG && SCSI_ABORT]
pattern= (\d\d:\d\d:\d\d).*snx(\d.*)(n\d.*) kernel:.+ attempting task abort!
desc= scsi abort $0
action= add SCSI_ABORT $0 ;\
        lcall %o -> ( sub { ++$SCSI_ABORT_count; } )

# Add the subsequent errors lines. I don't think can be correlated
# with the "attempting device abort", so log all of them.
type= Single
ptype= RegExp
context = [SYSLOG_LOG && SCSI_ABORT]
pattern= (\d\d:\d\d:\d\d).*snx(\d.*)(n\d.*) kernel:.+ scsi target.+: handle.+, sas_address.+, phy
desc= scsi abort $0
action= add SCSI_ABORT $0

type= Single
ptype= RegExp
context = [SYSLOG_LOG && SCSI_ABORT]
pattern= (\d\d:\d\d:\d\d).*snx(\d.*)(n\d.*) kernel:.+ scsi target.+: enclosure_logical_id.+, slot
desc= scsi abort $0
action= add SCSI_ABORT $0
