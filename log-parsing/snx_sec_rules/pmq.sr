#/
# What is reported
# ~~~~~~~~~~~~~~~~

# Reports power state of all Sonexions. Send up to one email per
# minute, so errors can accumulate.

#
# Origin
# ~~~~~~
# **lmmon-aggregated.log**, which was generated from
# **lmmon-pmq.log**, itself generated by
# *pm -q*.
#
# Instances of logged strings
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~
# ::
#
#   Wed Aug 28 12:16:43 2013: PMQ UNREACHABLE: snx11000n007
#   Wed Aug 28 12:16:43 2013: PMQ UNREACHABLE: snx11000n008
#/

type= single
continue=takenext
context = [AGGREGATED_LOG && !PMQ_UNREACHABLE]
ptype= RegExp
pattern= (\d\d:\d\d:\d\d) \d+: node in (unknown|off) power state: (.*)
desc= pmq unreachable
action= create PMQ_UNREACHABLE 60 (lcall %o -> ( sub { return $PMQ_UNREACHABLE_count; } ) ; if %o (report _THIS %cmd "%{subject}: %o node(s) in unknown power state (NEW)" %list)) ;\
        lcall %o -> ( sub { $PMQ_UNREACHABLE_count = 0; } ) ;\
        add PMQ_UNREACHABLE System:      %site %host, %mf ;\
        add PMQ_UNREACHABLE Filesystem:  all ;\
        add PMQ_UNREACHABLE Event:       Nodes in unknown power state. ;\
        add PMQ_UNREACHABLE Time:      $1  %Tmsg ;\
        add PMQ_UNREACHABLE %t  --  %tmsg2 ;\
        add PMQ_UNREACHABLE %{rule_info}pmq.sr ;\
        if %urlsr ( add PMQ_UNREACHABLE %{urlsr}/pmq.sr.html ) ;\
        add PMQ_UNREACHABLE %{N} ;\
        add PMQ_UNREACHABLE From log file: $+{_inputsrc}%{N} ;\
        add PMQ_UNREACHABLE %{N}

# Create an event the first time we see it. If the event is not seen
# again for half an hour, forget about it.
type= SingleWith2Thresholds
context = [AGGREGATED_LOG && PMQ_UNREACHABLE]
ptype= RegExp
pattern= (\d\d:\d\d:\d\d) \d+: node in (unknown|off) power state: (.*)
desc= pmq unreachable $2 $3
action= lcall %o $2 $3 $0 -> ( sub { $pmq_unreachable{$_[0]}{$_[1]} = $_[2]; } ) ;\
        add PMQ_UNREACHABLE $0 ;\
        lcall %o -> ( sub { ++$PMQ_UNREACHABLE_count; } )
window= 1
thresh= 1
desc2= pmq unreachable fixed $2 $3
action2= lcall %o $2 $3 -> ( sub { delete($pmq_unreachable{$_[0]}{$_[1]} ); } );
window2=1800
thresh2=0


# Summary of existing error every 4 hours
type=Calendar
time=3 */6 * * * *
desc= pmq unreachable summary
action=lcall %o -> ( sub { my $sum_all = ""; \
                           my $recap = ""; \
                           if (%pmq_unreachable and %{$pmq_unreachable{"unknown"}}) { \
                             $recap .= "Number of nodes in unknown power state: " . scalar(keys %{$pmq_unreachable{"unknown"}}) . "\n"; \
                             $sum_all .= "\n\n\nSummary of nodes in unknown power state:\n" ; \
                             $sum_all .= "================\n\n"; \
                             $sum_all .= join("\n", map { "$pmq_unreachable{\"unknown\"}{$_}" } sort keys %{$pmq_unreachable{"unknown"}}); \
                           } \
                           if (%pmq_unreachable and %{$pmq_unreachable{"off"}}) { \
                             $recap .= "Number of nodes in off power state: " . scalar(keys %{$pmq_unreachable{"off"}}) . "\n"; \
                             $sum_all .= "\n\n\nSummary of nodes in off power state:\n" ; \
                             $sum_all .= "================\n\n"; \
                             $sum_all .= join("\n", map { "$pmq_unreachable{\"off\"}{$_}" } sort keys %{$pmq_unreachable{"off"}}); \
                           } \
                           if ($sum_all) { return "\n" . $recap . "\n\n" . $sum_all; } else { return undef; } \
                           } ) ;\
       if %o (add PMQ_SUMMARY System:      %site %host, %mf ;\
              add PMQ_SUMMARY Filesystem:  all ;\
              add PMQ_SUMMARY Event:       Power state summary. ;\
              add PMQ_SUMMARY %t  --  %tmsg ;\
              add PMQ_SUMMARY %o ;\
              add PMQ_SUMMARY %{rule_info}pmq.sr ;\
              if %urlsr ( add PMQ_SUMMARY %{urlsr}/pmq.sr.html ) ;\
              report PMQ_SUMMARY %cmd "%{subject}: Power state summary" %list ;\
              delete PMQ_SUMMARY ;\
       )
