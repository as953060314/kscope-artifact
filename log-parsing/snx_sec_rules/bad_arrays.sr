#/
# What is reported
# ~~~~~~~~~~~~~~~~
# Reports when one or more arrays in a Sonexion are not in the OK
# state (i.e. they are degraded, in formatted/unused, ...).
# There will be one warning per day per node if the number of arrays
# doesn't change.
#
# Origin
# ~~~~~~
# **lmmon-aggregated.log**, which was generated from
# **lmmon-dm_report.log**, itself generated by
# *dm_report*.
#
# Instance of logged string
# ~~~~~~~~~~~~~~~~~~~~~~~~~
# ::
#
#   Thu Feb 21 11:11:10 2013: snx11003n002: array(s) not in an Ok state: md75:Degraded, md74:Degraded
#/

type= single
continue=takenext
ptype= RegExp
pattern= (\d\d:\d\d:\d\d) \d+: snx(\d+)(n\d+): array\(s\) not in an Ok state: (.*)
desc= bad array state
context = AGGREGATED_LOG && !BAD_ARRAYS_$2$3
action= create BAD_ARRAYS_$2$3 60 (lcall %o $2$3 -> ( sub { return $BAD_ARRAYS_count{$_[0]}; } ) ; if %o (report _THIS %cmd "%{subject}$2$3: SSU array(s) in bad state" %list)) ;\
        lcall %o $2$3 -> ( sub { $BAD_ARRAYS_count{$_[0]} = 0; } ) ;\
        add BAD_ARRAYS_$2$3 1 day %wmsg ;\
        add BAD_ARRAYS_$2$3 System:      %site %host, %mf ;\
        add BAD_ARRAYS_$2$3 Filesystem:  %{fs}$2 ;\
        add BAD_ARRAYS_$2$3 Event:       Array(s) in bad state: $4. ;\
        add BAD_ARRAYS_$2$3 Time:      $1  %Tmsg ;\
        add BAD_ARRAYS_$2$3 %t  --  %tmsg2 ;\
        add BAD_ARRAYS_$2$3 %{rule_info}bad_arrays.sr ;\
        if %urlsr ( add BAD_ARRAYS_$2$3 %{urlsr}/bad_arrays.sr.html ) ;\
        add BAD_ARRAYS_$2$3 %{N} ;\
        add BAD_ARRAYS_$2$3 From log file: $+{_inputsrc}%{N} ;\
        add BAD_ARRAYS_$2$3 %{N}

type= SingleWithSuppress
ptype= RegExp
pattern= (\d\d:\d\d:\d\d) \d+: snx(\d+)(n\d+): array\(s\) not in an Ok state: (.*)
desc= bad array state %{fs}$2$3 $4
context = AGGREGATED_LOG && BAD_ARRAYS_$2$3
action= add BAD_ARRAYS_$2$3 $0 ;\
        lcall %o $2$3 -> ( sub { ++$BAD_ARRAYS_count{$_[0]}; } )
window=86400
